t = 0:0.0001:10;
f = 1000;
z = cos(2 * pi * 1000 * t); % sin((2)*(pi)*(frequency)*(time));
plot(t(1: (length(t))/200), z(1:(length(z)/200)), 'b-');
movegui(figure(1), 'west') % you dont need
SpectrumAnalyzer(z, f);
movegui(figure(2), 'east') % you dont need

sin1 = cos(2 * pi * 100 * t);
figure(3)
plot(t(1: (length(t))/200), sin1(1:(length(sin1)/200)), 'b-');
movegui(figure(3), 'west');
SpectrumAnalyzer(sin1,100);
movegui(figure(4), 'east');

am = (1+sin1).*z;
figure(5)
plot(t(1: (length(t))/50), am(1:(length(am)/50)), 'b-');
movegui(figure(5), 'west');
SpectrumAnalyzer(am, 10000);

%this is just some Curious Code, i was curious how it would sound 
%{
count = 1000;

audioplayer(am, 10000);
player audioplayer(am, count);
while count > 0
    play(player);
end 
%}

co_am = am.*z;
figure(6)
plot(t(1: (length(t))/50), co_am(1:(length(co_am)/50)), 'b-');
movegui(figure(6), 'west');
SpectrumAnalyzer(co_am, 10000);
movegui(figure(7), 'east');
soundsc(co_am, 10000);

am2 = filter(Num,1,co_am);
figure(7)
plot(t(1000: (length(t))/200), am2(1000:(length(am2)/200)), 'b-');
movegui(figure(7), 'west');
SpectrumAnalyzer(am2, 10000);
movegui(figure(8), 'east');
soundsc(am2, 10000)

am3 = abs(am);
plot(t(1: (length(t))/200), am3(1:(length(am3)/200)), 'b-');
movegui(figure(8), 'west');
SpectrumAnalyzer(am3, 10000);
movegui(figure(9), 'east');
soundsc(am3, 10000);

am4 = 0;

while am3 ~= am4
    am4 = filter(Num,1,am4);
end






